---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name: tf-mod-aws-security-group

# Canonical Git repo
github_repo: https://github.com/humn-ai/tf-mod-aws-security-group

# # Badges to display
# badges:
#   - name: "Build Status"
#     image: ""
#     url: ""

# Short description of this project
description: |-
  Terraform module which creates [EC2 security group within VPC](http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html) on AWS.
  These types of resources are supported:
  * [EC2-VPC Security Group](https://www.terraform.io/docs/providers/aws/r/security_group.html)
  * [EC2-VPC Security Group Rule](https://www.terraform.io/docs/providers/aws/r/security_group_rule.html)

  ## Features

  This module aims to implement **ALL** combinations of arguments supported by AWS and latest stable version of Terraform:
  * IPv4/IPv6 CIDR blocks
  * [VPC endpoint prefix lists](http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-endpoints.html) (use data source [aws_prefix_list](https://www.terraform.io/docs/providers/aws/d/prefix_list.html))
  * Access from source security groups
  * Access from self
  * Named rules ([see the rules here](https://github.com/terraform-aws-modules/terraform-aws-security-group/blob/master/rules.tf))
  * Named groups of rules with ingress (inbound) and egress (outbound) ports open for common scenarios (eg, [ssh](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/modules/ssh), [http-80](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/modules/http-80), [mysql](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/modules/mysql), see the whole list [here](https://github.com/terraform-aws-modules/terraform-aws-security-group/blob/master/modules/README.md))
  * Conditionally create security group and all required security group rules ("single boolean switch").

# External context to include
include:
  - "docs/terraform.md"

# How to use this module
usage: |-
  There are two ways to create security groups using this module:

  1. [Specifying predefined rules (HTTP, SSH, etc)](https://github.com/terraform-aws-modules/terraform-aws-security-group#security-group-with-predefined-rules)
  1. [Specifying custom rules](https://github.com/terraform-aws-modules/terraform-aws-security-group#security-group-with-custom-rules)

  ### Security group with predefined rules

  ```hcl
  module "web_server_sg" {
    source = "terraform-aws-modules/security-group/aws//modules/http-80"

    name        = "web-server"
    description = "Security group for web-server with HTTP ports open within VPC"
    vpc_id      = "vpc-12345678"

    ingress_cidr_blocks = ["10.10.0.0/16"]
  }
  ```

  ### Security group with custom rules

  ```hcl
  module "vote_service_sg" {
    source = "terraform-aws-modules/security-group/aws"

    name        = "user-service"
    description = "Security group for user-service with custom ports open within VPC, and PostgreSQL publicly open"
    vpc_id      = "vpc-12345678"

    ingress_cidr_blocks      = ["10.10.0.0/16"]
    ingress_rules            = ["https-443-tcp"]
    ingress_with_cidr_blocks = [
      {
        from_port   = 8080
        to_port     = 8090
        protocol    = "tcp"
        description = "User-service ports"
        cidr_blocks = "10.10.0.0/16"
      },
      {
        rule        = "postgresql-tcp"
        cidr_blocks = "0.0.0.0/0"
      },
    ]
  }
  ```

  ### Note about "value of 'count' cannot be computed"

  Terraform 0.11 has a limitation which does not allow **computed** values inside `count` attribute on resources (issues: [#16712](https://github.com/hashicorp/terraform/issues/16712), [#18015](https://github.com/hashicorp/terraform/issues/18015), ...)

  Computed values are values provided as outputs from `module`. Non-computed values are all others - static values, values referenced as `variable` and from data-sources.

  When you need to specify computed value inside security group rule argument you need to specify it using an argument which starts with `computed_` and provide a number of elements in the argument which starts with `number_of_computed_`. See these examples:

  ```hcl
  module "http_sg" {
    source = "terraform-aws-modules/security-group/aws"
    # omitted for brevity
  }

  module "db_computed_source_sg" {
    # omitted for brevity

    vpc_id = "vpc-12345678" # these are valid values also - "${module.vpc.vpc_id}" and "${local.vpc_id}"

    computed_ingress_with_source_security_group_id = [
      {
        rule                     = "mysql-tcp"
        source_security_group_id = "${module.http_sg.this_security_group_id}"
      }
    ]
    number_of_computed_ingress_with_source_security_group_id = 1
  }

  module "db_computed_sg" {
    # omitted for brevity

    ingress_cidr_blocks = ["10.10.0.0/16", "${data.aws_security_group.default.id}"]

    computed_ingress_cidr_blocks = ["${module.vpc.vpc_cidr_block}"]
    number_of_computed_ingress_cidr_blocks = 1
  }

  module "db_computed_merged_sg" {
    # omitted for brevity

    computed_ingress_cidr_blocks = ["10.10.0.0/16", "${module.vpc.vpc_cidr_block}"]
    number_of_computed_ingress_cidr_blocks = 2
  }
  ```

  Note that `db_computed_sg` and `db_computed_merged_sg` are equal, because it is possible to put both computed and non-computed values in arguments starting with `computed_`.

  ## Conditional creation

  Sometimes you need to have a way to create security group conditionally but Terraform does not allow to use `count` inside `module` block, so the solution is to specify argument `create`.

  ```hcl
  # This security group will not be created
  module "vote_service_sg" {
    source = "terraform-aws-modules/security-group/aws"

    create = false
    # ... omitted
  }
  ```

# Simple and advanced examples of this project
examples: |-
  * [Complete Security Group example](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/examples/complete) shows all available parameters to configure security group.
  * [HTTP Security Group example](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/examples/http) shows more applicable security groups for common web-servers.
  * [Disable creation of Security Group example](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/examples/disabled) shows how to disable creation of security group.
  * [Dynamic values inside Security Group rules example](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/examples/dynamic) shows how to specify values inside security group rules (data-sources and variables are allowed).
  * [Computed values inside Security Group rules example](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/examples/computed) shows how to specify computed values inside security group rules (solution for `value of 'count' cannot be computed` problem).

# Related projects
related:
  - name: terraform-aws-modules/terraform-aws-security-group
    description: forked module
    url: https://github.com/terraform-aws-modules/terraform-aws-security-group

# Contributor information
contributors:
  - name: "Callum Robertson"
    github: "callumccr"
    avatar: https://media-exp1.licdn.com/dms/image/C5603AQHb_3oZMZA5YA/profile-displayphoto-shrink_200_200/0?e=1588809600&v=beta&t=5QQQAlHrm1od5fQNZwdjOtbZWvsGcgNBqFRhZWgnPx4
    homepage: https://www.linkedin.com/in/callum-robertson-1a55b6110/

# Jira information
jira:
  - project:
    project_url:
    epic:
    epic_url:
    user_story:
    user_story_url:

---

